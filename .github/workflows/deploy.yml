name: Build and Deploy WASM Demo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Allow GitHub Actions to deploy to Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'latest'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔧 Install latest CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: 'latest'

    - name: 🔧 Cache Emscripten
      uses: actions/cache@v3
      id: cache-emsdk
      with:
        path: emsdk
        key: emsdk-latest-${{ runner.os }}

    - name: 🔧 Cache vcpkg
      uses: actions/cache@v3
      id: cache-vcpkg
      with:
        path: vcpkg
        key: vcpkg-${{ hashFiles('vcpkg.json') }}-${{ runner.os }}

    - name: 🏗️ Build project
      run: |
        # Setup Emscripten
        if [ ! -d "emsdk" ]; then
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          cd ..
        fi
        source emsdk/emsdk_env.sh
        
        # Setup vcpkg
        if [ ! -d "vcpkg" ]; then
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          ./bootstrap-vcpkg.sh
          cd ..
        fi
        export VCPKG_ROOT=$(pwd)/vcpkg
        
        # Build using npm script
        npm run build:release
        
        echo "✅ Build completed successfully!"
        ls -la dist/

    - name: 📋 Build summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "✅ Project built successfully" >> $GITHUB_STEP_SUMMARY
        echo "📦 Files generated:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        ls -la dist/ >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

    - name: 📤 Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4